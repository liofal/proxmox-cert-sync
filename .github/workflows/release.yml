name: Release and Deploy

on:
  push:
    branches: [ main ]

jobs:
  release:
    name: Create Release
    uses: liofal/actions/.github/workflows/semantic_release.yml@main
    with:
      semantic-release-plugins: >-
        @semantic-release/commit-analyzer
        @semantic-release/release-notes-generator
        semantic-release-helm
        @semantic-release/git
        @semantic-release/github
    permissions:
      contents: write
      issues: write
      pull-requests: write
    secrets: inherit

  build_deploy:
    name: Build and Deploy Docker Image
    needs: release
    if: needs.release.outputs.published == '1'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository at release tag
        uses: actions/checkout@v5
        with:
          ref: ${{ needs.release.outputs.version }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
            docker.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
          tags: |
            type=semver,pattern={{version}},value=${{ needs.release.outputs.version }}
            type=raw,value=latest,enable=${{ !contains(needs.release.outputs.version, '-') }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  publish_helm_chart:
    name: Publish Helm Chart
    needs: release
    if: needs.release.outputs.published == '1'
    uses: liofal/actions/.github/workflows/publish_helm.yml@main
    permissions:
      contents: read
      packages: write
    with:
      tag: ${{ needs.release.outputs.version }}
      chart_path: kube/charts/proxmox-cert-sync
    secrets: inherit
